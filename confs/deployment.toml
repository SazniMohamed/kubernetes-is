[server]
hostname = {{ .Values.deployment.config.hostName | quote }}
node_ip = "$env{NODE_IP}"
base_path = "https://$ref{server.hostname}:${carbon.management.port}"

[super_admin]
admin_role= "admin"
username = {{ .Values.deploymentToml.superAdmin.username | quote }}
{{- if .Values.deployment.secretStore.azure.enabled }}
password = "$secret{SUPER-ADMIN-PASSWORD}"
{{- else }}
password = {{ .Values.deploymentToml.superAdmin.password | quote }}
{{- end }}
create_admin_account = {{ .Values.deploymentToml.superAdmin.createAdminAccount }}

[user_store]
type = {{ .Values.deploymentToml.userStore.type | quote }}

[user_store_mgt]
allowed_user_stores=["org.wso2.carbon.user.core.ldap.UniqueIDReadOnlyLDAPUserStoreManager","org.wso2.carbon.user.core.ldap.UniqueIDReadWriteLDAPUserStoreManager","org.wso2.carbon.user.core.ldap.UniqueIDActiveDirectoryUserStoreManager","org.wso2.carbon.user.core.jdbc.UniqueIDJDBCUserStoreManager"]

[keystore.primary]
file_name =  {{ .Values.deploymentToml.keystore.primary.fileName | quote }}
type =  {{ .Values.deploymentToml.keystore.primary.type | quote }}
alias = {{ .Values.deploymentToml.keystore.primary.alias | quote }}
{{- if .Values.deployment.secretStore.azure.enabled }}
password = "$secret{PRIMARY-KEYSTORE-PASSWORD}"
key_password = "$secret{PRIMARY-KEYSTORE-PASSWORD}"
{{- else }}
password = {{ .Values.deploymentToml.keystore.primary.primaryKeyStorePassword | quote }}
key_password = {{ .Values.deploymentToml.keystore.primary.primaryKeyStorePassword | quote }}
{{- end }}

[keystore.internal]
file_name =  {{ .Values.deploymentToml.keystore.internal.fileName | quote }}
type =  {{ .Values.deploymentToml.keystore.internal.type | quote }}
alias = {{ .Values.deploymentToml.keystore.internal.alias | quote }}
{{- if .Values.deployment.secretStore.azure.enabled }}
password = "$secret{INTERNAL-KEYSTORE-PASSWORD}"
key_password = "$secret{INTERNAL-KEYSTORE-PASSWORD}"
{{- else }}
password = {{ .Values.deploymentToml.keystore.internal.internalKeyStorePassword | quote }}
key_password = {{ .Values.deploymentToml.keystore.internal.internalKeyStorePassword | quote }}
{{- end }}

[truststore]
file_name =  {{ .Values.deploymentToml.truststore.fileName | quote }}
type =  {{ .Values.deploymentToml.truststore.type | quote }}
{{- if .Values.deployment.secretStore.azure.enabled }}
password = "$secret{TRUSTSTORE-PASSWORD}"
{{- else }}
password = {{ .Values.deploymentToml.truststore.trustStorePassword | quote }}
{{- end }}

[keystore.tls]
file_name =  {{ .Values.deploymentToml.keystore.tls.fileName | quote }}
type =  {{ .Values.deploymentToml.keystore.tls.type | quote }}
alias = {{ .Values.deploymentToml.keystore.tls.alias | quote }}
{{- if .Values.deployment.secretStore.azure.enabled }}
password = "$secret{INTERNAL-KEYSTORE-PASSWORD}"
key_password = "$secret{INTERNAL-KEYSTORE-PASSWORD}"
{{- else }}
password = {{ .Values.deploymentToml.keystore.internal.internalKeyStorePassword | quote }}
key_password = {{ .Values.deploymentToml.keystore.internal.internalKeyStorePassword | quote }}
{{- end }}

[identity.auth_framework.endpoint]
{{- if .Values.deployment.secretStore.azure.enabled }}
app_password = "$secret{APPS-PASSWORD}"
{{- else }}
app_password = {{ .Values.deploymentToml.identity.identityAppsPassword | quote }}
{{- end }}

[account_recovery.endpoint.auth]
{{- if .Values.deployment.secretStore.azure.enabled }}
hash = "$secret{APPS-PASSWORD-HASH}"
{{- else }}
hash = {{ .Values.deploymentToml.account.recovery.endpoint.auth.hash | quote }}
{{- end }}

{{- if .Values.deploymentToml.clustering.enabled }}
[clustering]
membership_scheme = "kubernetes"
domain = "wso2.carbon.domain"
properties.membershipSchemeClassName = "org.wso2.carbon.membership.scheme.kubernetes.KubernetesMembershipScheme"
properties.KUBERNETES_NAMESPACE = "{{ .Release.Namespace }}"
properties.KUBERNETES_SERVICES = {{ include "..fullname" . | quote }}
properties.KUBERNETES_MASTER_SKIP_SSL_VERIFICATION = "true"
properties.USE_DNS = "false"
{{- end }}

[transport.https.properties]
proxyPort = 443
server = {{ .Values.deploymentToml.transport.https.properties.server | quote }}

[transport.https.sslHostConfig.properties]
protocols={{ .Values.deploymentToml.transport.https.sslHostConfig.properties.protocols | quote }}
ciphers={{ .Values.deploymentToml.transport.https.sslHostConfig.properties.ciphers | quote }}

[database.identity_db]
type = {{ .Values.deploymentToml.database.identity.type | quote }}
url = {{ .Values.deploymentToml.database.identity.url | quote }}
{{- if .Values.deployment.secretStore.azure.enabled }}
username = "$secret{IDENTITY-DB-USER-USERNAME}"
password = "$secret{IDENTITY-DB-USER-PASSWORD}"
{{- else }}
username = {{ .Values.deploymentToml.database.identity.username | quote }}
password = {{ .Values.deploymentToml.database.identity.password | quote }}
{{- end }}

{{- if .Values.deploymentToml.database.identity.poolOptions }}
[database.identity_db.pool_options]
{{- range $key, $value := .Values.deploymentToml.database.identity.poolOptions }}
{{ $key }} = {{ $value | quote }}
{{- end }}
{{- end }}

[database.shared_db]
type = {{ .Values.deploymentToml.database.shared.type | quote }}
url = {{ .Values.deploymentToml.database.shared.url | quote }}
{{- if .Values.deployment.secretStore.azure.enabled }}
username = "$secret{REGISTRY-DB-USER-USERNAME}"
password = "$secret{REGISTRY-DB-USER-PASSWORD}"
{{- else }}
username = {{ .Values.deploymentToml.database.shared.username | quote }}
password = {{ .Values.deploymentToml.database.shared.password | quote }}
{{- end }}
jmx_enable = false

{{- if .Values.deploymentToml.database.shared.poolOptions }}
[database.shared_db.pool_options]
{{- range $key, $value := .Values.deploymentToml.database.shared.poolOptions }}
{{ $key }} = {{ $value | quote }}
{{- end }}
{{- end }}

[datasource.WSO2ConsentDS]
id = "WSO2ConsentDS"
type = {{ .Values.deploymentToml.database.consent.type | quote }}
url = {{ .Values.deploymentToml.database.consent.url | quote }}
{{- if .Values.deployment.secretStore.azure.enabled }}
username = "$secret{CONSENT-DB-USER-USERNAME}"
password = "$secret{CONSENT-DB-USER-PASSWORD}"
{{- else }}
username = {{ .Values.deploymentToml.database.consent.username | quote }}
password = {{ .Values.deploymentToml.database.consent.password | quote }}
{{- end }}

{{- if .Values.deploymentToml.database.consent.poolOptions }}
[datasource.WSO2ConsentDS.pool_options]
{{- range $key, $value := .Values.deploymentToml.database.consent.poolOptions }}
{{ $key }} = {{ $value | quote }}
{{- end }}
{{- end }}

[authentication.consent]
prompt= false
data_source="jdbc/WSO2CONSENT_DB"

# Block all unused fileupload with super tenant permissions (SECURITYINTERNAL-1738)
[[resource.access_control]]
context="(.*)/fileupload/service(.*)"
secure=true
http_method = "all"
permissions = ["/permission/admin/manage/identity/applicationmgt/create"]

[[resource.access_control]]
context="(.*)/fileupload(.*)"
secure=true
http_method = "all"
permissions = ["/permission/protected/manage/monitor/tenants"]

[system_applications]
read_only_apps = []

[authentication.endpoints]
retry_url ="/authenticationendpoint/login.do"

[authentication.authenticator.basic.parameters]
showAuthFailureReason = true

[embedded_ldap]
enable = false

[oauth]
prompt_consent = false

[oauth.token_validation]
user_access_token_validity = 15552000
refresh_token_validity = 5184000

[http_access_log]
pattern = "%{X-Forwarded-For}i %t %h %A %a %{Referer}i %l %S %{User-Agent}i %U %s %r %q %A %v %p %b %I %D %T"

[admin_service.wsdl]
enable=true

[tenant_mgt]
enable_email_domain = true

[event.default_listener.identity_mgt]
priority= "50"
enable = true

[event.default_listener.governance_identity_mgt]
priority= "95"
enable = false

[event.default_listener.governance_identity_store]
priority= "97"
enable = false

[identity_mgt]
password_reset_email.enable_recaptcha=false
username_recovery.email.enable_recaptcha=false
password_reset_challenge_questions.enable_recaptcha=false
user_self_registration.enable_recaptcha=false
user_self_registration.verification_email_validity="7200"

[session.nonce.cookie]
enabled = false

[owasp.csrfguard]
enable = "false"

[versioning_configuration]
enable_versioning_properties=true
enable_versioning_comments=true
enable_versioning_tags=true
enable_versioning_ratings=true
