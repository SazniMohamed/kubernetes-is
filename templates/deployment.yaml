# -------------------------------------------------------------------------------------
#
# Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.
#
# This software is the property of WSO2 LLC. and its suppliers, if any.
# Dissemination of any information or reproduction of any material contained
# herein in any form is strictly forbidden, unless permitted by WSO2 expressly.
# You may not alter or remove any copyright or other notice from copies of this content.
#
# --------------------------------------------------------------------------------------
apiVersion: {{ .Values.k8sKindAPIVersions.deployment }}
kind: Deployment
metadata:
  name: {{ template "..fullname" . }}
  namespace: {{ .Release.Namespace }}
  annotations:
    checkov.io/skip1: CKV_K8S_38=service account token is required
    checkov.io/skip2: CKV_K8S_22=suppress read-only file system check
spec:
  progressDeadlineSeconds: {{ .Values.deployment.progressDeadlineSeconds }}
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "..selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "..selectorLabels" . | nindent 8 }}
      annotations:
        checksum.deployment.toml: {{ include (print $.Template.BasePath "/cm-deployment-toml.yaml") . | sha256sum }}
        checksum.secret.properties: {{ include (print $.Template.BasePath "/cm-secret-config-properties.yaml") . | sha256sum }}
        checksum.log4j.properties: {{ include (print $.Template.BasePath "/cm-log4j2-properties.yaml") . | sha256sum }}
        checksum.entrypoint.sh: {{ include (print $.Template.BasePath "/cm-entrypoint.yaml") . | sha256sum }}
        container.apparmor.security.beta.kubernetes.io/wso2is: {{ .Values.deployment.apparmor.profile }}
    spec:
      securityContext:
        runAsUser: {{ .Values.deployment.securityContext.runAsUser }}
        seccompProfile:
          type: {{ .Values.deployment.securityContext.seccompProfile.type }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "..name" . }}
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - {{ .Release.Name }}
                topologyKey: topology.kubernetes.io/zone
      containers:
        - name: wso2is
          image: {{ .Values.deployment.image.registry }}/{{ .Values.deployment.image.repository }}@{{ .Values.deployment.image.digest }}
          args:
            {{- if .Values.deployment.secretStore.azure.enabled }}
              - "-Djavax.net.ssl.trustStore=/home/wso2carbon/wso2is-{{ .Values.deployment.buildVersion }}/repository/resources/security/client-truststore.jks"
            {{- end }}
            - "-Dorg.wso2.CipherTransformation=AES/GCM/NoPadding"
            {{- if .Values.deployment.enableCorrelationLogs }}
            - "-DenableCorrelationLogs=true"
            {{- end }}
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.deployment.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.deployment.startupProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /oauth2/token/.well-known/openid-configuration
              port: 9443
              scheme: HTTPS
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /api/health-check/v1.0/health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          resources:
            requests:
              memory: {{ .Values.deployment.resources.requests.memory }}
              cpu: {{ .Values.deployment.resources.requests.cpu }}
            limits:
              memory: {{ .Values.deployment.resources.limits.memory }}
              cpu: {{ .Values.deployment.resources.limits.cpu }}
          lifecycle:
            preStop:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - >
                    echo "Pre stop hook triggered";
                    sleep {{ .Values.deployment.preStopHookWaitSeconds }};
                    echo "Shutdown server";
                    ${WSO2_SERVER_HOME}/bin/wso2server.sh stop
          securityContext:
            allowPrivilegeEscalation: false
            # File system should be read write to cater runtime writes to the configs, DB files, etc...
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: {{ .Values.deployment.resources.jvm.memOpts }}
            - name: JAVA_OPTS
              value: {{ .Values.deployment.resources.jvm.javaOpts }}
          ports:
            - containerPort: 9443
              protocol: TCP
          volumeMounts:
            # - name: {{ template "..fullname" . }}-deployment-toml
            #   mountPath: /home/wso2carbon/wso2-config-volume/repository/components/lib/postgresql-42.7.0.jar
            #   subPath: ./postgresql-42.7.0.jar
            - name: {{ template "..fullname" . }}-deployment-toml
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
              subPath: deployment.toml
            - name: {{ template "..fullname" . }}-secret-config-properties
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/security/secret-conf.properties
              subPath: secret-conf.properties
            - name: keystores
              mountPath: /home/wso2carbon/{{ .Values.deployment.productPackName }}-{{ .Values.deployment.buildVersion }}/repository/resources/security/{{ .Values.deploymentToml.truststore.fileName }}
              subPath: {{ .Values.deploymentToml.truststore.fileName }}
            - name: keystores
              mountPath: /home/wso2carbon/{{ .Values.deployment.productPackName }}-{{ .Values.deployment.buildVersion }}/repository/resources/security/{{ .Values.deploymentToml.keystore.internal.fileName }}
              subPath: {{ .Values.deploymentToml.keystore.internal.fileName }}
            # - name: keystores
            #   mountPath: /home/wso2carbon/{{ .Values.deployment.productPackName }}-{{ .Values.deployment.buildVersion }}/repository/resources/security/{{ .Values.deploymentToml.keystore.tls.fileName }}
            #   subPath: {{ .Values.deploymentToml.keystore.tls.fileName }}
            - name: keystores
              mountPath: /home/wso2carbon/{{ .Values.deployment.productPackName }}-{{ .Values.deployment.buildVersion }}/repository/resources/security/{{ .Values.deploymentToml.keystore.primary.fileName }}
              subPath: {{ .Values.deploymentToml.keystore.primary.fileName }}
            - name: {{ template "..fullname" . }}-log4j2-properties
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/log4j2.properties
              subPath: log4j2.properties
            {{- if .Values.deployment.secretStore.azure.enabled }}
            - name: secrets-volume
              mountPath: /mnt/secrets-store
              readOnly: true
            - name: {{ template "..fullname" . }}-entrypoint
              mountPath: /home/wso2carbon/docker-entrypoint.sh
              subPath: docker-entrypoint.sh
            {{- end }}
          {{- if .Values.deployment.persistence.enabled }}
            - name: runtime-persistent-data-storage
              mountPath: /home/wso2carbon/{{ .Values.deployment.productPackName }}-{{ .Values.deployment.buildVersion }}/repository/tenants
              subPath: {{ .Values.deployment.persistence.subPaths.tenants }}
            - name: runtime-persistent-data-storage
              mountPath: /home/wso2carbon/{{ .Values.deployment.productPackName }}-{{ .Values.deployment.buildVersion }}/repository/deployment/server/userstores
              subPath: {{ .Values.deployment.persistence.subPaths.userstores }}
          {{- end }}
        {{- if .Values.deployment.extraVolumeMounts }}
          {{- toYaml .Values.deployment.extraVolumeMounts | nindent 12 }}
        {{- end }}
      serviceAccountName: {{ template "..fullname" . }}
      volumes:
        {{- if .Values.deployment.extraVolumes }}
          {{ toYaml .Values.deployment.extraVolumes | nindent 8 }}
        {{- end }}
        - name: {{ template "..fullname" . }}-deployment-toml
          configMap:
            name: {{ template "..fullname" . }}-deployment-toml
        - name: {{ template "..fullname" . }}-log4j2-properties
          configMap:
            name: {{ template "..fullname" . }}-log4j2-properties
        - name: {{ template "..fullname" . }}-secret-config-properties
          configMap:
            name: {{ template "..fullname" . }}-secret-config-properties
        - name: keystores
          secret:
            secretName: {{ .Values.deployment.JKSSecretName }}
        {{- if .Values.deployment.secretStore.azure.enabled }}
        - name: secrets-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ template "..fullname" . }}
            {{- if .Values.deployment.secretStore.azure.enabled }}
            nodePublishSecretRef:
              name: {{ .Values.deployment.secretStore.azure.nodePublishSecretRef }}
            {{- end }}
        {{- end }}
        - name: {{ template "..fullname" . }}-entrypoint
          configMap:
            name: {{ template "..fullname" . }}-entrypoint
            defaultMode: 0407
        {{- if .Values.deployment.persistence.enabled }}
        - name: runtime-persistent-data-storage
          persistentVolumeClaim:
            claimName: {{ template "..fullname" . }}
        {{- end }}
